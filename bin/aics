#!/usr/bin/env node

'use strict';

var ProjectManager = require('../lib/project');
var PackageManager = require('../lib/package');
var StackManager = require('../lib/stack');
var Account = require('../lib/account');
var commander = require('commander');
require('../lib/update_notifier');

process.env.AICS_HOST = 'http://storage.fami2u.com';

// process.env.AICS_HOST = 'http://localhost:8080';

var pkg = require('../package.json');

process.title = 'aics-cli';
commander.version(pkg.version)
  .description(pkg.description)


//add user
commander
  .command('adduser')
  .description('登录aics cli')
  .action(function(env, options) {
    Account.adduser();
  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ aics adduser # 登录aics cli');
    console.log();
  });

//create user
commander
  .command('register')
  .description('创建aics账户')
  .action(function(env, options) {
    Account.createUser();
  })
  .on('--help', function() {
    console.log("Examples:")
    console.log();
    console.log("   $ aics createuser #create user account")
    console.log()
  })

//log logind user info
commander
  .command('info')
  .description('显示 aics cli 登录用户信息')
  .action(function(env, options) {
    var user = Account.get();
    console.log(user.username);
  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ aics whoami # 显示当前登录用户信息');
    console.log();
  });

// generate aics codedepot conf or aics project conf
commander
  .command('init <name>')
  .description('生成aics配置文件')
  .action(function(name) {
    PackageManager.init(name);
  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ aics init <name> # 生成一个 名为 name 代码包项目 ');
    console.log();
  });

commander
  .command('add <name>')
  .description('添加 aics 代码包 代码包地址: http://aics.fami2u.com/')
  .action(function(name) {
    PackageManager.add(name)
  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    # aics add fami:readme # 添加代码包到项目');
    console.log();
  });

// start a project from a stack template
commander
  .command('start <name> <stack>')
  .description('根据选定的技术栈生成项目 技术栈地址: http://aics.fami2u.com/stacks')
  .action(function(name,stack) {
    StackManager.initWithStack(name,stack);
  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    # aics start app meteor-wechat');
    console.log();
  });

//publish to aics
commander
  .command('publish <name>')
  .description('发布 aics 组件')
  .action(function(name) {
    PackageManager.publish(name);
  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ aics publish [name] # 发布名为 [name] 的 aics 代码包');
    console.log();
  });

//addfile to package
commander
  .command('addfile <file> <name>')
  .description('添加文件到组件')
  .action(function(file,name) {
    PackageManager.addfile( file,name);
  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('   # aics addfile README.md depot # 添加文件README.md 到 depot 组件包');
    console.log();
  });


// 回滚安装的模块

// commander
//   .command('rollback <name>')
//   .description('回滚项目安装的组件')
//   .action(function(name) {
//     console.log(name)
//     // PackageManager.rollback(name);
//   }).on('--help', function() {
//     console.log('  Examples:');
//     console.log();
//     console.log('   # aics addfile -f README.md -t depot # 添加文件README.md 到 depot 组件包');
//     console.log();
//   });

//删除安装的包

commander
  .command('rm <name>')
  .description('删除安装的组件')
  .action(function(name) {
    PackageManager.remove(name);
  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('   # aics remove fami:readme # 删除安装的包');
    console.log();
  });

//更新依赖的的包

commander
  .command('update <name>')
  .description('更新项目依赖')
  .action(function(name) {
    PackageManager.updatePackage(name)
  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ aics update [name] # 更新名为 [name] 的代码包依赖的代码包');
    console.log();
  });
  
commander.parse(process.argv);
